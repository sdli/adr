{"version":3,"sources":["../../api/lib/index.js"],"names":["port","apiPort","loginStart","req","res","next","sess","session","body","username","password","post","url","getServerUrl","JSON","stringify","phone","header","err","httpResponse","result","parse","console","log","code","token","data","tokenInfo","userInfo","expire","Date","json","reloadResponse","InitFetch","met","vali","method","validator","tryToken","initData","realToken","toLowerCase","Object","assign","headers","response","requestUrl","type","organId","childId","mothod","pipe","fetchUrl","func","loadAuth","loginStatus","msg","setHeader","listen","error","info","loadImg","pngNum","parseInt","Math","random","p","color","img","getBase64","imgbase64","Buffer","writeHead","end","logout","funcs","countryList","countryReport","villageReport","getChildDetails","shenhe","changePassword","initFetch","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["import config from \"../utils/configs\";\r\nimport fetchRequest from \"../utils/request\";\r\nimport date from \"../utils/date\";\r\nimport request from \"request\";\r\nimport captchapng from 'captchapng';\r\nimport co from 'co';\r\n\r\nvar port = config.apiPort;\r\n\r\n/**\r\n * 请求登录接口\r\n * @param {请求内容} req \r\n * @param {返回内容} res \r\n */\r\nfunction loginStart(req, res,next) {\r\n    let sess = req.session;\r\n    let { username, password } = req.body;\r\n    if (username && password) {\r\n        request.post({\r\n            url: config.getServerUrl('login'),\r\n            body: JSON.stringify({\r\n                phone: username,\r\n                password: password\r\n            }),\r\n            header: {\r\n                \"Content-type\": \"application/json;charset=UTF-8\"\r\n            }\r\n        }, function(err, httpResponse, body) {\r\n            let result = JSON.parse(body);\r\n            console.log(result);\r\n            if (result.code == \"200\") {\r\n                sess.username = username;\r\n                sess.password = password;\r\n                sess.token = result.data.tokenInfo.token;\r\n                sess.userInfo = result.data;\r\n                sess.expire = Date.parse(new Date()) / 1000 + 10;\r\n                res.json(result);\r\n            }else{\r\n                res.json(config.reloadResponse);\r\n            }\r\n        });\r\n    } else {\r\n        res.json(config.reloadResponse);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 接口quest方法获取封装，一次callback\r\n * @param {*请求参数} req \r\n * @param {*请求参数} res \r\n */\r\nconst InitFetch = function(met,url,vali) {\r\n        const method = met;\r\n        const validator = (typeof vali !== \"undefined\" || vali != null)?vali:null;\r\n        const tryToken = function(req) {\r\n            var sess = req.session;\r\n            var { username, password, token, expire } = sess;\r\n            if (username && password && token && expire) {\r\n                if (expire > Date.parse(new Date()) / 1000) {\r\n                    return token;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n        return function(req,res,initData){\r\n            co(function*(){\r\n            var realToken = tryToken(req);\r\n            var sess = req.session;\r\n            if (!realToken) {\r\n                var result = yield fetchRequest(config.getServerUrl('login'), {\r\n                    body: JSON.stringify({\r\n                        phone: req.session.username,\r\n                        password: req.session.password\r\n                    }),\r\n                    method: 'POST',\r\n                    header: {\r\n                        \"Content-type\": \"application/json;charset=UTF-8\"\r\n                    }\r\n                });\r\n\r\n                if (result.code == \"200\") {\r\n                    sess.token = result.data.tokenInfo.token;\r\n                    sess.userInfo = result.data;\r\n                    sess.expire = Date.parse(new Date()) / 1000 + 10;\r\n                    realToken = sess.token;\r\n                }\r\n            }\r\n            if(method.toLowerCase() == \"post\"){\r\n                console.log(initData);\r\n                request.post(Object.assign({body:JSON.stringify(initData)},{\r\n                    headers: {\r\n                        \"Content-type\": \"application/json\",\r\n                        \"authorization\": realToken\r\n                    },\r\n                    url: url\r\n                }),function(err,response,body){\r\n                    let result = JSON.parse(body);\r\n                    console.log(result);\r\n                    if(result.code == \"200\"){\r\n                        if(validator){\r\n                            validator(result,req,res);\r\n                        }else{\r\n                            res.json(result);\r\n                        }\r\n                    }else{\r\n                        res.json(config.reloadResponse);\r\n                    }\r\n                });\r\n            }else{\r\n                let requestUrl = \"\";\r\n                switch (req.body.type){\r\n                    case \"village\":\r\n                        requestUrl = url+\"?orgId=\"+req.body.organId+\"&currPage=1&pageSize=100\";\r\n                        break;\r\n                    case \"childDetails\":\r\n                        requestUrl = url+\"?childId=\"+req.body.childId;\r\n                        break;\r\n                    default:\r\n                        requestUrl = url+req.body.organId;\r\n                }\r\n                request({\r\n                    mothod: \"GET\",\r\n                    url: requestUrl,\r\n                    headers:{\r\n                        \"authorization\": realToken\r\n                    }\r\n                }).pipe(res);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * 接口二次封装。第二个callback\r\n * @param {*接口类型} type \r\n */\r\nfunction fetchUrl(mothod,type,func=null){\r\n    return InitFetch(mothod,config.getServerUrl(type),func);\r\n}\r\n\r\n/**\r\n * 加载认证\r\n * @param {*处理请求} req \r\n * @param {*处理返回数据} res \r\n * @param {*} next \r\n */\r\nfunction loadAuth(req, res, next) {\r\n    let loginStatus = (typeof req.session.username === \"undefined\" || typeof req.session.password === \"undefined\" || !req.session.username || !req.session.password) ? false : true;\r\n    if (loginStatus) {\r\n        let result = {\r\n            code: '1',\r\n            userInfo: req.session.userInfo,\r\n            msg: 'login auth OK!'\r\n        };\r\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        res.setHeader(\"Content-Type\", \"application/json\");\r\n        res.json(result);\r\n    } else {\r\n        let result = {\r\n            code: '0',\r\n            msg: 'no auth!'\r\n        };\r\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        res.setHeader(\"Content-Type\", \"application/json\");\r\n        res.json(result);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 监听端口号\r\n * @param {错误} error \r\n */\r\nfunction listen(error) {\r\n    if (error) {\r\n        console.error(error)\r\n    } else {\r\n        console.info(\"==> 🌎  API listening on port %s.\", port, port)\r\n    }\r\n}\r\n\r\nfunction loadImg(req,res,next){\r\n    var pngNum = parseInt(Math.random()*9000+1000);\r\n    req.session.pngNum = pngNum;\r\n    var p = new captchapng(80,30,parseInt(Math.random()*9000+1000)); // width,height,numeric captcha \r\n    p.color(0, 0, 0, 0);  // First color: background (red, green, blue, alpha) \r\n    p.color(80, 80, 80, 255); // Second color: paint (red, green, blue, alpha) \r\n\r\n    var img = p.getBase64();\r\n    var imgbase64 = new Buffer(img,'base64');\r\n    res.writeHead(200, {\r\n        'Content-Type': 'image/png'\r\n    });\r\n    res.end(imgbase64);\r\n    next();\r\n}\r\n\r\n/**\r\n * 请求登出\r\n * @param {请求内容} req \r\n * @param {返回内容} res \r\n * @param {传递方法} next \r\n */\r\nfunction logout(req,res,next){\r\n    req.session.username = null;\r\n    req.session.password = null;\r\n    let result = {\r\n        \"code\":1,\r\n        \"msg\": \"logout succ\"\r\n    };\r\n    res.json(result);\r\n}\r\n/**\r\n * export整合\r\n */\r\nconst funcs = {\r\n    countryList: fetchUrl(\"get\",\"countryList\"),\r\n    countryReport: fetchUrl(\"get\",\"countryReport\"),\r\n    villageReport: fetchUrl(\"get\",\"villageReport\"),\r\n    getChildDetails: fetchUrl(\"get\",\"getChildDetails\"),\r\n    shenhe: fetchUrl(\"post\",\"shenhe\"),\r\n    changePassword: fetchUrl(\"post\",\"changePassword\"),\r\n    loginStart: loginStart,\r\n    initFetch: InitFetch,\r\n    loadAuth: loadAuth,\r\n    listen: listen,\r\n    loadImg: loadImg,\r\n    logout: logout\r\n};\r\n\r\nmodule.exports = funcs;"]}