{"version":3,"sources":["../../api/lib/index.js"],"names":["port","apiPort","loginStart","req","res","next","sess","session","body","username","password","code","parseInt","pngNum","json","codeErrorResponse","post","url","getServerUrl","JSON","stringify","phone","header","err","httpResponse","result","parse","token","data","tokenInfo","userInfo","expire","Date","reloadResponse","InitFetch","met","vali","method","validator","tryToken","initData","realToken","expireTime","toLowerCase","Object","assign","headers","response","requestUrl","type","organId","level","loginUserId","childId","id","mothod","pipe","fetchUrl","func","loadAuth","loginStatus","msg","setHeader","listen","error","console","info","loadImg","Math","random","p","color","img","getBase64","imgbase64","Buffer","writeHead","end","logout","download","funcs","countryList","countryReport","villageReport","getChildDetails","shenhe","changePassword","initFetch","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["import config from \"../utils/configs\";\r\nimport fetchRequest from \"../utils/request\";\r\nimport date from \"../utils/date\";\r\nimport request from \"request\";\r\nimport captchapng from 'captchapng';\r\nimport co from 'co';\r\n\r\nvar port = config.apiPort;\r\n\r\n/**\r\n * 请求登录接口\r\n * @param {请求内容} req \r\n * @param {返回内容} res \r\n */\r\nfunction loginStart(req, res,next) {\r\n            let sess = req.session;\r\n            let { username, password ,code} = req.body;\r\n            if(parseInt(code) != parseInt(sess.pngNum)){\r\n                res.json(config.codeErrorResponse);\r\n                return true;\r\n            }\r\n            if (username && password ) {\r\n                request.post({\r\n                    url: config.getServerUrl('login'),\r\n                    body: JSON.stringify({\r\n                        phone: username,\r\n                        password: password\r\n                    }),\r\n                    header: {\r\n                        \"Content-type\": \"application/json;charset=UTF-8\"\r\n                    }\r\n                }, function(err, httpResponse, body) {\r\n                    try{\r\n                        let result = JSON.parse(body);\r\n                        if (result.code == \"200\") {\r\n                            sess.username = username;\r\n                            sess.password = password;\r\n                            sess.token = result.data.tokenInfo.token;\r\n                            sess.userInfo = result.data;\r\n                            sess.expire = Date.parse(new Date()) / 1000 + result.data.tokenInfo.token - 300;\r\n                            res.json(result);\r\n                        }else{\r\n                            res.json(config.reloadResponse);\r\n                        }\r\n                    }catch(err){\r\n                        if(err){\r\n                            res.json(config.reloadResponse);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                res.json(config.reloadResponse);\r\n            }\r\n}\r\n\r\n\r\n/**\r\n * 接口quest方法获取封装，一次callback\r\n * @param {*请求参数} req \r\n * @param {*请求参数} res \r\n */\r\nconst InitFetch = function(met,url,vali) {\r\n        const method = met;\r\n        const validator = (typeof vali !== \"undefined\" || vali != null)?vali:null;\r\n        const tryToken = function(req) {\r\n            var sess = req.session;\r\n            var { username, password, token, expire } = sess;\r\n            if (username && password && token && expire) {\r\n                if (expire > Date.parse(new Date()) / 1000) {\r\n                    return token;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n        return function(req,res,initData){\r\n            co(function*(){\r\n                try{\r\n                    var realToken = tryToken(req);\r\n                    var sess = req.session;\r\n                    if (!realToken) {\r\n                            var result = yield fetchRequest(config.getServerUrl('login'), {\r\n                                body: JSON.stringify({\r\n                                    phone: req.session.username,\r\n                                    password: req.session.password\r\n                                }),\r\n                                method: 'POST',\r\n                                header: {\r\n                                    \"Content-type\": \"application/json;charset=UTF-8\"\r\n                                }\r\n                            });\r\n                            if (result.data.code == \"200\") {\r\n                                sess.token = result.data.data.tokenInfo.token;\r\n                                sess.userInfo = result.data.data;\r\n                                sess.expire = Date.parse(new Date()) / 1000 + result.data.data.tokenInfo.expireTime;\r\n                                realToken = sess.token;\r\n                            }\r\n                        }\r\n                    if(method.toLowerCase() == \"post\"){\r\n                            request.post(Object.assign({body:JSON.stringify(initData)},{\r\n                                headers: {\r\n                                    \"Content-type\": \"application/json\",\r\n                                    \"authorization\": realToken\r\n                                },\r\n                                url: url\r\n                            }),function(err,response,body){\r\n                                let result = JSON.parse(body);\r\n                                if(result.code == \"200\"){\r\n                                    if(validator){\r\n                                        validator(result,req,res);\r\n                                    }else{\r\n                                        res.json(result);\r\n                                    }\r\n                                }else{\r\n                                    res.json(config.reloadResponse);\r\n                                }\r\n                            });\r\n                        }else{\r\n                            let requestUrl = \"\";\r\n                            switch (req.body.type){\r\n                                case \"village\":\r\n                                    requestUrl = url+\"?orgId=\"+req.body.organId+\"&currPage=1&pageSize=100&currLevel=\"+req.body.level+\"&loginUserId=\"+req.body.loginUserId;\r\n                                    break;\r\n                                case \"childDetails\":\r\n                                    requestUrl = url+\"?childId=\"+req.body.childId;\r\n                                    break;\r\n                                case \"byRosterId\":\r\n                                    requestUrl = url+ \"?rosterId=\"+req.body.id;\r\n                                    break;\r\n                                case \"byVillageId\":\r\n                                    requestUrl = url+ \"?villId=\" + req.body.id+\"&currLevel=\" + req.body.level;\r\n                                    break;\r\n                                case \"byOrgId\":\r\n                                    requestUrl = url + \"?orgId=\" + req.body.id+\"&currLevel=\"+ req.body.level;\r\n                                    break;\r\n                                case \"tableList\":\r\n                                    requestUrl = url + req.body.organId;\r\n                                    break;\r\n                                default:\r\n                                    requestUrl = url + \"?orgId=\"+req.body.organId + \"&currLevel=\"+req.body.level\r\n                            }\r\n                            request({\r\n                                mothod: \"GET\",\r\n                                url: requestUrl,\r\n                                headers:{\r\n                                    \"authorization\": realToken\r\n                                }\r\n                            }).pipe(res);\r\n                    }   \r\n                }catch(err){\r\n                    if(err){\r\n                        res.json(config.reloadResponse);\r\n                    }\r\n                }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * 接口二次封装。第二个callback\r\n * @param {*接口类型} type \r\n */\r\nfunction fetchUrl(mothod,type,func=null){\r\n    return InitFetch(mothod,config.getServerUrl(type),func);\r\n}\r\n\r\n/**\r\n * 加载认证\r\n * @param {*处理请求} req \r\n * @param {*处理返回数据} res \r\n * @param {*} next \r\n */\r\nfunction loadAuth(req, res, next) {\r\n    let loginStatus = (typeof req.session.username === \"undefined\" || typeof req.session.password === \"undefined\" || !req.session.username || !req.session.password) ? false : true;\r\n    if (loginStatus) {\r\n        let result = {\r\n            code: '1',\r\n            userInfo: req.session.userInfo,\r\n            msg: 'login auth OK!'\r\n        };\r\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        res.setHeader(\"Content-Type\", \"application/json\");\r\n        res.json(result);\r\n    } else {\r\n        let result = {\r\n            code: '0',\r\n            msg: 'no auth!'\r\n        };\r\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        res.setHeader(\"Content-Type\", \"application/json\");\r\n        res.json(result);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 监听端口号\r\n * @param {错误} error \r\n */\r\nfunction listen(error) {\r\n    if (error) {\r\n        console.error(error)\r\n    } else {\r\n        console.info(\"==> 🌎  API listening on port %s.\", port, port)\r\n    }\r\n}\r\n\r\nfunction loadImg(req,res,next){\r\n    var pngNum = parseInt(Math.random()*9000+1000);\r\n    req.session.pngNum = pngNum;\r\n    var p = new captchapng(80,30,parseInt(pngNum)); // width,height,numeric captcha \r\n    p.color(0, 0, 0, 0);  // First color: background (red, green, blue, alpha) \r\n    p.color(80, 80, 80, 255); // Second color: paint (red, green, blue, alpha) \r\n\r\n    var img = p.getBase64();\r\n    var imgbase64 = new Buffer(img,'base64');\r\n    res.writeHead(200, {\r\n        'Content-Type': 'image/png'\r\n    });\r\n    res.end(imgbase64);\r\n}\r\n\r\n/**\r\n * 请求登出\r\n * @param {请求内容} req \r\n * @param {返回内容} res \r\n * @param {传递方法} next \r\n */\r\nfunction logout(req,res,next){\r\n    req.session.username = null;\r\n    req.session.password = null;\r\n    let result = {\r\n        \"code\":1,\r\n        \"msg\": \"logout succ\"\r\n    };\r\n    res.json(result);\r\n}\r\n\r\n/**\r\n * 下载接口\r\n */\r\nfunction download(req,res){\r\n    let type = req.body.type;\r\n    switch (type){\r\n        case \"byRosterId\":  fetchUrl(\"get\",\"downloadChild\")(req,res) ;break;\r\n        case \"byVillageId\":  fetchUrl(\"get\",\"downloadCountry\")(req,res); break;\r\n        case \"byOrgId\":  fetchUrl(\"get\",\"downloadOrg\")(req,res);break;\r\n        default:  res.json(config.reloadResponse);\r\n    }\r\n}\r\n\r\n/**\r\n * export整合\r\n */\r\nconst funcs = {\r\n    countryList: fetchUrl(\"get\",\"countryList\"),\r\n    countryReport: fetchUrl(\"get\",\"countryReport\"),\r\n    villageReport: fetchUrl(\"get\",\"villageReport\"),\r\n    getChildDetails: fetchUrl(\"get\",\"getChildDetails\"),\r\n    shenhe: fetchUrl(\"post\",\"shenhe\"),\r\n    changePassword: fetchUrl(\"post\",\"changePassword\"),\r\n    download: download,\r\n    loginStart: loginStart,\r\n    initFetch: InitFetch,\r\n    loadAuth: loadAuth,\r\n    listen: listen,\r\n    loadImg: loadImg,\r\n    logout: logout\r\n};\r\n\r\nmodule.exports = funcs;"]}