{"version":3,"sources":["../../api/utils/request.js"],"names":["request","parseJSON","response","data","json","err","Error","checkStatus","status","error","statusText","url","options","then","catch"],"mappings":";;;;;kBA+BwBA,O;;AA/BxB;;;;;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,MAAG;AACD,QAAIC,OAAOD,SAASE,IAAT,EAAX;AACD,GAFD,CAEC,OAAMC,GAAN,EAAU;AACT,QAAGA,GAAH,EAAO;AACL,YAAM,IAAIC,KAAJ,CAAU,UAAV,CAAN;AACD,KAFD,MAEK;AACH,aAAOH,IAAP;AACD;AACF;AACF;;AAED,SAASI,WAAT,CAAqBL,QAArB,EAA+B;AAC7B,MAAIA,SAASM,MAAT,IAAmB,GAAnB,IAA0BN,SAASM,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAON,QAAP;AACD;;AAED,MAAMO,QAAQ,IAAIH,KAAJ,CAAUJ,SAASQ,UAAnB,CAAd;AACAD,QAAMP,QAAN,GAAiBA,QAAjB;AACA,QAAMO,KAAN;AACD;;AAED;;;;;;;AAOe,SAAST,OAAT,CAAiBW,GAAjB,EAAsBC,OAAtB,EAA+B;AAC5C,SAAO,qBAAMD,GAAN,EAAWC,OAAX,EACJC,IADI,CACCN,WADD,EAEJM,IAFI,CAECZ,SAFD,EAGJY,IAHI,CAGC;AAAA,WAAS,EAAEV,UAAF,EAAT;AAAA,GAHD,EAIJW,KAJI,CAIE;AAAA,WAAQ,EAAET,QAAF,EAAR;AAAA,GAJF,CAAP;AAKD","file":"request.js","sourcesContent":["import fetch from 'dva/fetch';\r\n\r\nfunction parseJSON(response) {\r\n  try{\r\n    var data = response.json();\r\n  }catch(err){\r\n    if(err){\r\n      throw new Error(\"not json\");\r\n    }else{\r\n      return data;\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n\r\n  const error = new Error(response.statusText);\r\n  error.response = response;\r\n  throw error;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nexport default function request(url, options) {\r\n  return fetch(url, options)\r\n    .then(checkStatus)\r\n    .then(parseJSON)\r\n    .then(data => ({ data }))\r\n    .catch(err => ({ err}));\r\n}\r\n"]}