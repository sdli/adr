{"version":3,"sources":["../api/index.js"],"names":["app","port","apiPort","use","secret","resave","saveUninitialized","cookie","secure","urlencoded","extended","post","req","res","next","sess","session","username","body","password","count","result","status","code","msg","setHeader","json","save","loginStatus","get","pngNum","parseInt","Math","random","p","color","img","getBase64","imgbase64","Buffer","writeHead","end","listen","error","console","info"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from \"body-parser\";\r\nimport configs from \"./utils/configs\"; \r\nimport session from \"express-session\";\r\nimport captchapng from 'captchapng';\r\nimport cookieParser from \"cookie-parser\";\r\n\r\nconst app = new express();\r\nconst port  = configs.apiPort;\r\napp.use(cookieParser());\r\napp.use(session({\r\n  secret: 'sessiontest',\r\n  resave: true,\r\n  saveUninitialized: false,\r\n  cookie: {secure: false}\r\n}));\r\n\r\napp.use(bodyParser.urlencoded({ extended: false}));\r\n\r\n// setResponse(app);\r\napp.post('/login',function(req,res,next){\r\n    let sess = req.session;\r\n    let username = req.body.username;\r\n    let password = req.body.password;\r\n    if(sess.count){\r\n        sess.count++;\r\n    }else{\r\n        sess.count =1;\r\n    }\r\n    if(username == '123' && password == '123'){\r\n\r\n        const result = {\r\n            status: 1,\r\n            code: '1',\r\n            msg: 'succ',\r\n            count: sess.count,\r\n        };\r\n        sess.status = 1;\r\n        sess.username = username;\r\n        res.setHeader(\"Content-Type\",\"application/json\");\r\n        res.json(result);\r\n        sess.save();\r\n    }else{\r\n        const result = {\r\n            status: 0,\r\n            code: '0',\r\n            msg: 'fail',\r\n            count: sess.count,\r\n            username: username\r\n        };\r\n        sess.status = 0;\r\n        res.setHeader(\"Content-Type\",\"application/json\");\r\n        res.json(result);\r\n    }\r\n});\r\n\r\napp.post('/loadAuth',function(req,res,next){\r\n  let loginStatus = (typeof req.session.status === \"undefined\")?false:req.session.status;\r\n  if(loginStatus){\r\n      let result = {\r\n          code : '1',\r\n          username: req.session.username,\r\n          msg : 'login auth OK!'\r\n      };\r\n      res.setHeader(\"Access-Control-Allow-Origin\",\"*\");\r\n      res.setHeader(\"Content-Type\",\"application/json\");\r\n      res.json(result);\r\n  }else{\r\n    let result = {\r\n        code : '0',\r\n        username: \"steven?\",\r\n        msg : 'no auth!'\r\n    };\r\n    res.setHeader(\"Access-Control-Allow-Origin\",\"*\");\r\n    res.setHeader(\"Content-Type\",\"application/json\");\r\n    res.json(result);\r\n  }\r\n});\r\n\r\napp.get('/img',function(req,res,next){\r\n    var pngNum = parseInt(Math.random()*9000+1000);\r\n    req.session.pngNum = pngNum;\r\n    var p = new captchapng(80,30,parseInt(Math.random()*9000+1000)); // width,height,numeric captcha \r\n    p.color(0, 0, 0, 0);  // First color: background (red, green, blue, alpha) \r\n    p.color(80, 80, 80, 255); // Second color: paint (red, green, blue, alpha) \r\n\r\n    var img = p.getBase64();\r\n    var imgbase64 = new Buffer(img,'base64');\r\n    res.writeHead(200, {\r\n        'Content-Type': 'image/png'\r\n    });\r\n    res.end(imgbase64);\r\n    next();\r\n});\r\n\r\napp.listen(port,function(error) {\r\n  if (error) {\r\n    console.error(error)\r\n  } else {\r\n    console.info(\"==> ðŸŒŽ  API listening on port %s. Open up http://localhost:%s/ in your browser.\", port, port)\r\n  }\r\n  next();\r\n});"]}